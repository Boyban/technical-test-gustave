{"ast":null,"code":"var _jsxFileName = \"/home/boyban/Epitech/Tek3/Part-Time/technical-test-gustave/src/components/Admin/index.js\";\nimport React from 'react';\nimport { withAuthorization } from '../Session';\nimport { withFirebase } from '../Firebase';\nimport * as ROLES from '../../constants/roles';\n\nvar AdminPage = function AdminPage() {\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Admin\"), React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Restricted area! Only users with the admin role are authorized.\"));\n};\n\nvar condition = function condition(authUser) {\n  return authUser && authUser.roles.includes(ROLES.ADMIN);\n};\n\nexport default withAuthorization(condition)(AdminPage);","map":{"version":3,"sources":["/home/boyban/Epitech/Tek3/Part-Time/technical-test-gustave/src/components/Admin/index.js"],"names":["React","withAuthorization","withFirebase","ROLES","AdminPage","condition","authUser","roles","includes","ADMIN"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,iBAAT,QAAkC,YAAlC;AACA,SAASC,YAAT,QAA6B,aAA7B;AAGA,OAAO,KAAKC,KAAZ,MAAuB,uBAAvB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,SACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uEAFJ,CADc;AAAA,CAAlB;;AASA,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,QAAQ;AAAA,SAAGA,QAAQ,IAAIA,QAAQ,CAACC,KAAT,CAAeC,QAAf,CAAwBL,KAAK,CAACM,KAA9B,CAAf;AAAA,CAA1B;;AAEA,eAAeR,iBAAiB,CAACI,SAAD,CAAjB,CAA6BD,SAA7B,CAAf","sourcesContent":["import React from 'react';\nimport { withAuthorization } from '../Session';\nimport { withFirebase } from '../Firebase';\n\n\nimport * as ROLES from '../../constants/roles';\n\nconst AdminPage = () => (\n    <div>\n        <h1>Admin</h1>\n        <p>\n            Restricted area! Only users with the admin role are authorized.\n        </p>\n    </div>\n);\n\nconst condition = authUser =>authUser && authUser.roles.includes(ROLES.ADMIN);\n\nexport default withAuthorization(condition)(AdminPage);"]},"metadata":{},"sourceType":"module"}